{"pageProps":{"note":{"id":"9voje01mfme5zskfbv14se4","title":"Roadmap","desc":"","updated":1674699794073,"created":1669488663768,"custom":{},"fname":"zendron.roadmap","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Zendron"},"contentHash":"114176e06017d79e2f8b08bba8499993","links":[{"type":"wiki","from":{"fname":"zendron.roadmap","id":"9voje01mfme5zskfbv14se4","vaultName":"Zendron"},"value":"zendron/resync.py","alias":"sync","position":{"start":{"line":87,"column":43,"offset":3769},"end":{"line":87,"column":69,"offset":3795},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"zendron/resync.py"}}],"anchors":{"zendron-ideas":{"type":"header","text":"Zendron Ideas","value":"zendron-ideas","line":7,"column":0,"depth":2},"zendron-roadmap":{"type":"header","text":"Zendron Roadmap","value":"zendron-roadmap","line":12,"column":0,"depth":2},"issues":{"type":"header","text":"Issues","value":"issues","line":91,"column":0,"depth":2},"itemized-annotation-collection":{"type":"header","text":"Itemized-Annotation-Collection","value":"itemized-annotation-collection","line":98,"column":0,"depth":2}},"children":[],"parent":"3bgot52d1psalztauw89ii9","data":{}},"body":"<h1 id=\"roadmap\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#roadmap\"></a>Roadmap</h1>\n<h2 id=\"zendron-ideas\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#zendron-ideas\"></a>Zendron Ideas</h2>\n<ul>\n<li>We can now add images by getting the local paths to the image annotations out of the cache.</li>\n<li>We can also create a two way sync for projects by writing the \"comments\" note to the data in Zotero. This way any new project can read this file and write on it to update it.</li>\n</ul>\n<h2 id=\"zendron-roadmap\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#zendron-roadmap\"></a>Zendron Roadmap</h2>\n<ul>\n<li>Solid bold lines have been completed.</li>\n<li>Dashed lines are loose plans.</li>\n<li>Brainstorming ideas to prevent fatal sync.</li>\n</ul>\n<div class=\"mermaid\">\n  %%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': \"#E69F00\", 'edgeLabelBackground':\"#F0E442\", 'tertiaryColor': '#fff0f0'}}}%%\nflowchart TB\nUser((User))--oRun_Task{Run_Task}\nUser((User)) -.User_Input.->Make_Path_Change_Func([Make_Path_Change_Func])\n  subgraph .vscode task\n    Run_Task{Run_Task}==>Zendron:Sync{Zendron:Sync}\n    Zendron:Sync{Zendron:Sync}==>Sync_Zotero.sh\n    Sync_Zotero.sh==>resync.py\n    Sync_Zotero.sh==>Pod-Import-Markdown\n    Run_Task{Run_Task}-.->Zendron:Doctor_Fix_Path{Zendron:Doctor_Fix_Path}\n    Run_Task{Run_Task}-.->Zendron:Delete_zotero_pod{Zendron:Delete_zotero_pod}\n    Zendron:Delete_zotero_pod{Zendron:Delete_zotero_pod} -.-> Delete.sh\n    Zendron:Doctor_Fix_Path{Zendron:Doctor_Fix_Path} -.-> Doctor.sh\n    Delete.sh -.-> delete_pod.py\n    Doctor.sh-.->doctor.py\n  end\n  subgraph resync.py\n    Data_Class==Compile_Metadata_Func==>Metadata_Lines\n    Metadata_Lines==Write_Metadata_Func==>Metadata.md_files\n    Conf/Metadata.format-. Main_Func .->Data_Class\n    Data_Class==Compile_Annotations_Func==>Annotations_Lines\n    Annotations_Lines==Write_Annotations_Func==>Annotations.md_files\n    Conf/Annotations.format-. Main_Func .->Data_Class\n  end\n  subgraph database.py\n    Metadata_Date_Modified-.Database_Metadata_Func.-> Metadata_Database\n    Metadata_Database-.Database_Metadata_Diff_Func.-> Metadata_Database_Diff\n    Metadata_Annotations_Modified-.Database_Annotations_Func.-> Annotations_Database\n    Annotations_Database-.Database_Annotations_Diff_Func.-> Annotations_Database_Diff\n    Metadata_Database_Diff-.Init.-> Data_Class\n    Annotations_Database_Diff-.Init.-> Data_Class\n    Metadata_Database -.Clear_Database_Func.-> Metadata_Database\n    Annotations_Database -.Clear_Database_Func.-> Annotations_Database\n    Linked_Notes_Database -.Clear_Database_Func.-> Linked_Notes_Database\n    Metadata_Database -.Load_Database_Func .-> Database_Obj\n    Annotations_Database -.Load_Database_Func .-> Database_Obj\n    Linked_Notes_Database -.Load_Database_Func .-> Database_Obj\n  end\n  subgraph Pod-Import-Markdown\n    Metadata.md_files==>Dendron:Import_Pod\n    Annotations.md_files==>Dendron:Import_Pod\n    config.import.yml==>Dendron:Import_Pod\n  end\n  subgraph Dendron_Vault\n    Dendron:Import_Pod==>Zendron.Import.*.md\n    Zendron.Import.*.md==>Vault\n    Zendron.Import.*.md-.wiki_link.->Zendron.Local.*.md\n  end\n  subgraph scan_import.py\n    Zendron.Import.*.md-.extract-links.->Out_Linked_Notes\n    Out_Linked_Notes-.database-links.->Linked_Notes_Database\n  end\n  subgraph delete_pod.py\n    Zendron.Import.*.md-.Collect_Paths_Func.->Zotero_Limb_Paths\n    Linked_Notes_Database-.Collect_Paths_Func.->Zotero_Link_Paths\n    Zotero_Limb_Paths-.->Delete_zotero_pod_Func\n    Zotero_Link_Paths-.->Delete_zotero_pod_Func\n  end\n  subgraph doctor.py\n    *Zendron.Import.*.md -. fix_path .-> Local_Import_Path_Diff\n    Zendron.Local.*.md -. fix_path .-> Local_Import_Path_Diff\n    Local_Import_Path_Diff -.-> Make_Path_Change_Func([Make_Path_Change_Func])\n    Make_Path_Change_Func([Make_Path_Change_Func])  -.-> Corrected_Paths\n    Corrected_Paths-.Overwrite_Local_Path_Func  .->Zendron.Local.*.md\n  end\n\n  subgraph Ideas\n    sync_backward.py-.->tags-and-comments\n    refactor_before_import.py-.->stop-fatal-mistake\n  end\n</div>\n<h2 id=\"issues\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#issues\"></a>Issues</h2>\n<ul>\n<li>Annotations are sorted by date modified <a title=\"Private\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\" class=\"private\">sync (Private)</a>\n<ul>\n<li><code>['data']['AnnotationSortIndex']</code> returns a number liked '00000|001873|00467'</li>\n<li>Looks like the first number is index of item, the middle one changes the most maybe every character or word, and the last number changes medium maybe page wise.</li>\n</ul>\n</li>\n<li>If <code>Dendron: Doctor</code> is used to <code>createMissingLinkedNotes</code> then notes will be created that cannot be easily deleted or overwritten by removing the import branch</li>\n</ul>\n<h2 id=\"itemized-annotation-collection\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#itemized-annotation-collection\"></a>Itemized-Annotation-Collection</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Build database with this data.\n<img src=\"/Zendron/assets/images/delete-itemized-annotation-collection.png\"></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> BetterBibTex export is finnicky... pyzotero has a way to generate bibtex.</li>\n</ul>","noteIndex":{"id":"nuyfwd7iokzd7m9oax0cdx5","title":"Root-Zendron","desc":"","updated":1679860129235,"created":1661538521294,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Zendron"},"contentHash":"130c5ef5fb59033f42b02aa2be0f1927","links":[],"anchors":{"zendron":{"type":"header","text":"Zendron","value":"zendron","line":7,"column":0,"depth":2},"paper-export":{"type":"header","text":"Paper Export","value":"paper-export","line":9,"column":0,"depth":2}},"children":["fm2x5t091y755nimxrpjwez","dhqqdsj7upk727guws9vgox","7g2c2qq7d38imc5pqcn3pcv","p23vy0l4olv9ldoplaadusm","mfxec2289q62ux02wn7s3ys","3bgot52d1psalztauw89ii9","ke6q578idqoxwbgk6ogd4hu","246wpv22f3s0ljv367bybrs","axrqsyq1ln9p8l6pgs49q5l","2l3rlznkipoemsp0arda720","d1kfxb25bm35h67d0fr57o0","2ultsx7is5k0ytdugjbow6l"],"parent":null,"data":{},"body":"## Zendron\n\n## Paper Export\n\n- [paper.docx](./notes/export/paper.docx)\n- [paper.pdf](./notes/export/paper.pdf)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableExportPodV2":true},"commands":{"lookup":{"note":{"selectionMode":"none","confirmVaultOnCreate":true,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"alwaysPrompt"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"title","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Zendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"M":"medium","L":"low","H":"high"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"dendronVersion":"0.95.0","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":false,"enableKatex":true,"assetsPrefix":"/Zendron","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://Mjvolk3.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["notes"]},"writeStubs":false,"seo":{"title":"Dendron","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"theme":"light","enableTaskNotes":true,"siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}